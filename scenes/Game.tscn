[gd_scene load_steps=58 format=2]

[ext_resource path="res://addons/monitor_overlay/monitor_overlay.gd" type="Script" id=1]
[ext_resource path="res://scenes/levels/Scene_Test_2.tscn" type="PackedScene" id=2]
[ext_resource path="res://resources/import3D/terrain/foliage/bush.obj" type="ArrayMesh" id=3]
[ext_resource path="res://resources/materials/Foliage.material" type="Material" id=4]
[ext_resource path="res://resources/import3D/terrain/tree/tree_1.obj" type="ArrayMesh" id=5]
[ext_resource path="res://resources/textures/terrain/Terrain_Rock_TM_2.png" type="Texture" id=6]
[ext_resource path="res://resources/textures/terrain/Terrain_Rock_NM_2.png" type="Texture" id=7]
[ext_resource path="res://resources/import3D/terrain/foliage/plants.obj" type="ArrayMesh" id=8]
[ext_resource path="res://resources/textures/foliage/Foliage_TM_1.png" type="Texture" id=9]
[ext_resource path="res://scripts/camera/cam.gd" type="Script" id=10]
[ext_resource path="res://resources/textures/terrain/Terrain_Rock_TM_1.png" type="Texture" id=11]
[ext_resource path="res://resources/textures/tree/Tree_1_NM.bmp" type="Texture" id=12]
[ext_resource path="res://scripts/camera/cam-move.gd" type="Script" id=13]
[ext_resource path="res://resources/import3D/terrain/tree/tree_1_leaves_blob.obj" type="ArrayMesh" id=14]
[ext_resource path="res://resources/import3D/terrain/tree/tree_1_leaves_cards.obj" type="ArrayMesh" id=15]
[ext_resource path="res://resources/textures/foliage/Bush_TM_1.png" type="Texture" id=16]
[ext_resource path="res://resources/materials/Bush_Outer.material" type="Material" id=17]
[ext_resource path="res://resources/import3D/terrain/tree/tree_1_leaves_blob_textured.obj" type="ArrayMesh" id=18]
[ext_resource path="res://scripts/level/level.gd" type="Script" id=19]
[ext_resource path="res://resources/materials/Cutout.material" type="Material" id=20]
[ext_resource path="res://resources/import3D/terrain/foliage/bush2.obj" type="ArrayMesh" id=21]
[ext_resource path="res://resources/import3D/terrain/foliage/fern1.obj" type="ArrayMesh" id=22]
[ext_resource path="res://resources/materials/Foliage_NoCull.material" type="Material" id=23]
[ext_resource path="res://resources/import3D/terrain/test/chunk.obj" type="ArrayMesh" id=24]
[ext_resource path="res://resources/textures/terrain/Terrain_Grass_TM_2.jpg" type="Texture" id=25]
[ext_resource path="res://resources/envs/Meadow_Afternoon.tres" type="Environment" id=26]
[ext_resource path="res://resources/textures/terrain/Terrain_Cliff_TM_1.png" type="Texture" id=27]
[ext_resource path="res://resources/textures/terrain/Test_Splat.png" type="Texture" id=28]

[sub_resource type="World" id=49]

[sub_resource type="Shader" id=50]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.1.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,unshaded;

uniform vec4 albedo_R : hint_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 albedo_G : hint_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 albedo_B : hint_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 albedo_A : hint_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform sampler2D texture_albedo_R : hint_albedo;
uniform sampler2D texture_albedo_G : hint_albedo;
uniform sampler2D texture_albedo_B : hint_albedo;
uniform sampler2D texture_albedo_A : hint_albedo;
uniform sampler2D texture_splat : hint_albedo;
uniform sampler2D texture_tint : hint_albedo;
uniform vec3 uvr_scale;
uniform vec3 uvg_scale;
uniform vec3 uvb_scale;
uniform vec3 uva_scale;

void fragment() {
	vec2 base_uv = UV;
	vec2 r_scale_uv = UV*uvr_scale.xy;
	vec2 g_scale_uv = UV*uvg_scale.xy;
	vec2 b_scale_uv = UV*uvb_scale.xy;
	vec2 a_scale_uv = UV*uva_scale.xy;
	vec4 R_tex = texture(texture_albedo_R,r_scale_uv);
	vec4 G_tex = texture(texture_albedo_G,g_scale_uv);
	vec4 B_tex = texture(texture_albedo_B,b_scale_uv);
	//vec4 A_tex = texture(texture_albedo_A,a_scale_uv);
	vec4 splat_tex = texture(texture_splat,base_uv);
	vec4 tint_tex = texture(texture_tint,base_uv);
	vec4 albedo_tex = (R_tex * splat_tex.r * albedo_R)
	 + (G_tex * splat_tex.g * albedo_G)
	 + (B_tex * splat_tex.b * albedo_B);
	ALBEDO = albedo_tex.rgb;
}"

[sub_resource type="OpenSimplexNoise" id=21]
octaves = 4
period = 10.0

[sub_resource type="NoiseTexture" id=22]
noise = SubResource( 21 )

[sub_resource type="ShaderMaterial" id=51]
shader = SubResource( 50 )
shader_param/albedo_R = Color( 0.380392, 0.305882, 0.219608, 1 )
shader_param/albedo_G = Color( 0.329412, 0.298039, 0.2, 1 )
shader_param/albedo_B = Color( 0.141176, 0.0980392, 0.0470588, 1 )
shader_param/albedo_A = Color( 1, 1, 1, 1 )
shader_param/uvr_scale = Vector3( 14, 14, 0 )
shader_param/uvg_scale = Vector3( 20, 20, 0 )
shader_param/uvb_scale = Vector3( 80, 80, 0 )
shader_param/uva_scale = null
shader_param/texture_albedo_R = ExtResource( 11 )
shader_param/texture_albedo_G = ExtResource( 25 )
shader_param/texture_albedo_B = ExtResource( 27 )
shader_param/texture_splat = ExtResource( 28 )
shader_param/texture_tint = SubResource( 22 )

[sub_resource type="SpatialMaterial" id=19]
albedo_color = Color( 0.356863, 0.156863, 0.156863, 1 )

[sub_resource type="CapsuleMesh" id=14]
radius = 0.7
mid_height = 2.0

[sub_resource type="CapsuleMesh" id=26]
radius = 0.3
mid_height = 0.35

[sub_resource type="NavigationMesh" id=52]
vertices = PoolVector3Array( 19.5, 0.314982, -9.25, 19.5, 0.314982, -19.5, 9.75, 0.314982, -19.5, 9.5, 0.314982, -9.25, 7.75, 0.314982, -9.25, 0, 0.314982, -19.5, -9.75, 0.314982, -19.5, -19.5, 0.314982, -9.25, 7.75, 0.314982, -9.25, 9.5, 0.314982, -9.25, 9.75, 0.314982, -19.5, 0, 0.314982, -19.5, -9.75, 0.314982, -19.5, -19.5, 0.314982, -19.5, -19.5, 0.314982, -9.25, 3.25, 0.314982, -6.5, 5, 0.314982, -6.5, 5.5, 0.314982, -8, -19.5, 0.314982, -9.25, -19.5, 0.314982, -3, 2.25, 0.314982, -3, 2.25, 0.314982, -5.75, -19.5, 0.314982, -9.25, -19.5, 0.314982, -3, 2.25, 0.314982, -5.75, 3.25, 0.314982, -6.5, 5.5, 0.314982, -8, 7.75, 0.314982, -9.25, -19.5, 0.314982, -9.25, 13.25, 0.564982, -4, 13.75, 1.31498, -2, 14.75, 1.06498, -2, 14, 1.06498, -3, 12.25, 0.314982, -6.75, 12, 0.314982, -4.5, 13.25, 0.564982, -4, 13.25, 0.564982, -4, 14.75, 1.06498, -2, 15.75, 0.314982, -2, 14.9167, 0.814982, -2.66667, 14, 1.06498, -3, 12.25, 0.314982, -6.75, 13.25, 0.564982, -4, 15.75, 0.314982, -2, 19.5, 0.314982, -2, 19.5, 0.314982, -9.25, 14.9167, 0.814982, -2.66667, 19.5, 0.314982, -9.25, 9.5, 0.314982, -9.25, 12.25, 0.314982, -6.75, 9, 2.56498, -7, 9.5, 2.31498, -7.25, 9.25, 1.81498, -8, 7.25, 1.81498, -7.5, 9.5, 3.81498, -3.75, 10.75, 3.31498, -4.5, 9, 3.06498, -6.25, 7.25, 2.81498, -6, 6.5, 2.56498, -5.5, 8, 3.81498, -3.5, 9, 2.56498, -7, 7.25, 1.81498, -7.5, 7.25, 2.81498, -6, 9, 3.06498, -6.25, 10.75, 3.31498, -4.5, 10.25, 3.06498, -6.25, 9, 3.06498, -6.25, 8, 3.81498, -3.5, 8.25, 4.56498, -1.25, 8.75, 4.56498, -1.25, 9.5, 3.81498, -3.75, 9.5, 0.564982, -4.25, 10.25, 0.564982, -4.25, 10.75, 0.564982, -5, 10.75, 0.314982, -5.75, 9.25, 0.314982, -7, 8.75, 0.314982, -5.25, 7.25, 0.314982, -6.5, 6.75, 0.314982, -5.75, 7, 0.314982, -5, 8.75, 0.314982, -5.25, 9.25, 0.314982, -7, 5.25, 1.06498, -2, 5.5, 1.06498, -1.25, 6, 1.56498, -2.5, 4.25, 0.564982, -2, 5.25, 1.06498, -2, 6, 1.56498, -2.5, 4.25, 0.564982, -2, 6, 1.56498, -2.5, 6, 1.81498, -3.75, 4.75, 1.56498, -5.5, 3.25, 1.31498, -3.75, 3.25, 0.814982, -3, 4, 1.81498, -4.625, 4.25, 0.564982, -2, 3.25, 0.814982, -3, 2.25, 0.314982, -3, 2.25, 0.314982, -3, -19.5, 0.314982, -3, -19.5, 0.314982, -2, 4.25, 0.564982, -2, 7.75, 1.56498, -3.75, 8.25, 2.06498, -2.5, 8.75, 1.81498, -3, 8.5, 1.56498, -3.75, 10.25, 6.56498, -1.75, 10.25, 6.56498, -1, 11, 6.81498, -0.75, 11, 6.31498, -2.5, 12.25, 1.56498, -2, 12.25, 1.31498, -2.5, 11.75, 1.31498, -2.5, 10.75, 2.06498, 0.25, 10.75, 2.06498, 0.75, 11.75, 2.06498, 0.5, 12.25, 1.56498, -2, 11.75, 1.31498, -2.5, 11, 2.06498, -1.5, 3.5, 0.314982, 0.25, 4.75, 0.314982, -0.5, 4.25, 0.314982, -0.75, 3.5, 0.314982, 0.25, 4.25, 0.314982, -0.75, 4.25, 0.564982, -2, -19.5, 0.314982, -2, -19.5, 0.314982, 6, 9.5, 0.314982, 6, 6.75, 0.314982, 5.75, 3.5, 0.314982, 0.25, -19.5, 0.314982, -2, -19.5, 0.314982, 6, 3.75, 0.314982, 4.25, -19.5, 0.314982, 6, 6.75, 0.314982, 5.75, 3.75, 0.314982, 4.25, 13.75, 1.81498, 3.75, 14, 1.81498, 3, 13.5, 1.81498, 2.75, 14.75, 0.814982, -1.25, 14.75, 1.06498, -2, 13.75, 1.31498, -2, 14.5, 1.06498, -1, 9.5, 3.31498, 3.25, 8.5, 3.06498, 3.25, 8.5, 2.56498, 4, 13.5, 1.56498, 1.5, 14, 1.31498, 1.25, 14, 1.56498, -0.25, 13.75, 1.31498, -2, 19.5, 0.314982, -2, 15.75, 0.314982, -2, 15.75, 0.314982, -1.25, 13.25, 2.06498, 2.5, 10, 3.31498, 2.25, 9.5, 3.31498, 3.25, 10.75, 3.06498, 3, 11.0833, 3.06498, 2.33333, 13.25, 2.06498, 2.5, 9.5, 3.31498, 3.25, 8.5, 2.56498, 4, 13.75, 1.81498, 3.75, 13.5, 1.81498, 2.75, 10.75, 3.06498, 3, 11.125, 2.81498, 3.875, 15.5, 0.314982, -1, 14.75, 0.314982, 4.5, 19.5, 0.314982, 6, 19.5, 0.314982, -2, 15.75, 0.314982, -1.25, 15.5, 0.314982, -1, 15.75, 0.314982, -1.25, 14.75, 0.814982, -1.25, 14.5, 1.06498, -1, 13.25, 2.06498, 2.5, 13.5, 1.81498, 2.75, 13.5, 1.56498, 1.5, 13.75, 1.31498, -2, 13.25, 2.06498, 2.5, 13.5, 1.56498, 1.5, 14.75, 0.314982, 4.5, 11, 0.314982, 6, 19.5, 0.314982, 6, 13.75, 1.31498, -2, 14, 1.56498, -0.25, 14.5, 1.06498, -1, 11.25, 0.314982, 0, 11.25, 0.314982, 0.5, 11.75, 0.314982, 0.25, 11.75, 0.314982, -0.5, 7.75, 1.31498, 4.75, 7.25, 1.56498, 3.75, 6.75, 1.56498, 3.75, 5.75, 1.56498, 4.25, 5.25, 1.81498, 2.75, 6.75, 2.06498, 2.75, 6.5, 1.81498, 1.5, 5.75, 1.31498, 0.25, 4.5, 1.31498, 1, 4.75, 1.81498, 2.5, 5.25, 1.81498, 2.75, 5, 1.81498, 3.75, 5.75, 1.56498, 4.25, 6.75, 1.56498, 3.75, 6.75, 2.06498, 2.75, 6.75, 2.06498, 2.75, 8.25, 2.81498, 2.75, 8, 2.31498, 1.5, 6.5, 1.81498, 1.5, 19.5, 0.314982, 12.75, 19.5, 0.314982, 6, 11, 0.314982, 6, -19.5, 0.314982, 12.75, -19.5, 0.314982, 19.5, -9.75, 0.314982, 19.5, 9.75, 0.314982, 19.5, 19.5, 0.314982, 19.5, 19.5, 0.314982, 12.75, 19.5, 0.314982, 12.75, 11, 0.314982, 6, 9.5, 0.314982, 6, 0, 0.314982, 19.5, 9.75, 0.314982, 19.5, -19.5, 0.314982, 6, -19.5, 0.314982, 12.75, -9.75, 0.314982, 19.5, 0, 0.314982, 19.5, 9.5, 0.314982, 6 )
polygons = [ PoolIntArray( 1, 0, 2 ), PoolIntArray( 2, 0, 3 ), PoolIntArray( 5, 4, 6 ), PoolIntArray( 6, 4, 7 ), PoolIntArray( 9, 8, 10 ), PoolIntArray( 10, 8, 11 ), PoolIntArray( 14, 13, 12 ), PoolIntArray( 16, 15, 17 ), PoolIntArray( 17, 15, 18 ), PoolIntArray( 21, 20, 19 ), PoolIntArray( 24, 23, 25 ), PoolIntArray( 25, 23, 22 ), PoolIntArray( 28, 27, 26 ), PoolIntArray( 31, 30, 32 ), PoolIntArray( 32, 30, 29 ), PoolIntArray( 34, 33, 35 ), PoolIntArray( 38, 37, 39 ), PoolIntArray( 39, 37, 40 ), PoolIntArray( 39, 40, 36 ), PoolIntArray( 43, 46, 44 ), PoolIntArray( 44, 46, 42 ), PoolIntArray( 44, 42, 41 ), PoolIntArray( 44, 41, 45 ), PoolIntArray( 47, 49, 48 ), PoolIntArray( 51, 50, 52 ), PoolIntArray( 52, 50, 53 ), PoolIntArray( 57, 56, 58 ), PoolIntArray( 58, 56, 59 ), PoolIntArray( 59, 56, 54 ), PoolIntArray( 54, 56, 55 ), PoolIntArray( 63, 62, 60 ), PoolIntArray( 60, 62, 61 ), PoolIntArray( 65, 64, 66 ), PoolIntArray( 68, 67, 69 ), PoolIntArray( 69, 67, 70 ), PoolIntArray( 72, 71, 73 ), PoolIntArray( 73, 71, 74 ), PoolIntArray( 74, 71, 76 ), PoolIntArray( 74, 76, 75 ), PoolIntArray( 78, 77, 79 ), PoolIntArray( 79, 77, 80 ), PoolIntArray( 80, 77, 81 ), PoolIntArray( 84, 83, 82 ), PoolIntArray( 85, 87, 86 ), PoolIntArray( 92, 94, 93 ), PoolIntArray( 93, 94, 88 ), PoolIntArray( 88, 94, 91 ), PoolIntArray( 88, 91, 90 ), PoolIntArray( 88, 90, 89 ), PoolIntArray( 97, 96, 95 ), PoolIntArray( 99, 98, 100 ), PoolIntArray( 100, 98, 101 ), PoolIntArray( 104, 103, 105 ), PoolIntArray( 105, 103, 102 ), PoolIntArray( 107, 106, 108 ), PoolIntArray( 108, 106, 109 ), PoolIntArray( 112, 111, 110 ), PoolIntArray( 114, 113, 115 ), PoolIntArray( 115, 113, 118 ), PoolIntArray( 115, 118, 116 ), PoolIntArray( 116, 118, 117 ), PoolIntArray( 121, 120, 119 ), PoolIntArray( 123, 122, 124 ), PoolIntArray( 124, 122, 125 ), PoolIntArray( 128, 127, 126 ), PoolIntArray( 132, 131, 129 ), PoolIntArray( 129, 131, 130 ), PoolIntArray( 135, 134, 133 ), PoolIntArray( 136, 138, 137 ), PoolIntArray( 139, 142, 140 ), PoolIntArray( 140, 142, 141 ), PoolIntArray( 145, 144, 143 ), PoolIntArray( 147, 146, 148 ), PoolIntArray( 148, 146, 149 ), PoolIntArray( 152, 151, 150 ), PoolIntArray( 155, 154, 156 ), PoolIntArray( 156, 154, 157 ), PoolIntArray( 156, 157, 153 ), PoolIntArray( 162, 161, 158 ), PoolIntArray( 158, 161, 164 ), PoolIntArray( 158, 164, 163 ), PoolIntArray( 163, 164, 159 ), PoolIntArray( 159, 164, 160 ), PoolIntArray( 169, 168, 165 ), PoolIntArray( 165, 168, 166 ), PoolIntArray( 166, 168, 167 ), PoolIntArray( 173, 172, 170 ), PoolIntArray( 170, 172, 171 ), PoolIntArray( 176, 175, 174 ), PoolIntArray( 177, 179, 178 ), PoolIntArray( 182, 181, 180 ), PoolIntArray( 185, 184, 183 ), PoolIntArray( 187, 186, 188 ), PoolIntArray( 188, 186, 189 ), PoolIntArray( 191, 190, 192 ), PoolIntArray( 192, 190, 193 ), PoolIntArray( 199, 198, 194 ), PoolIntArray( 194, 198, 197 ), PoolIntArray( 194, 197, 196 ), PoolIntArray( 194, 196, 195 ), PoolIntArray( 201, 200, 202 ), PoolIntArray( 202, 200, 203 ), PoolIntArray( 203, 200, 204 ), PoolIntArray( 208, 207, 205 ), PoolIntArray( 205, 207, 206 ), PoolIntArray( 211, 210, 209 ), PoolIntArray( 214, 213, 212 ), PoolIntArray( 217, 216, 215 ), PoolIntArray( 219, 218, 220 ), PoolIntArray( 220, 218, 222 ), PoolIntArray( 220, 222, 221 ), PoolIntArray( 224, 223, 225 ), PoolIntArray( 225, 223, 226 ), PoolIntArray( 226, 223, 227 ) ]
sample_partition_type = 1

[sub_resource type="Shader" id=15]
code = "shader_type spatial;
render_mode unshaded;

uniform vec4 outline_col : hint_color =  vec4(0.0, 0.0, 0.0, 1.0);
uniform float cutoff = 0.5;
uniform float highlight_amount = 1.0;
uniform float thickness = 1.0;

// Sample points
const vec2 sobelSamplePoints[9] = {
	vec2(-1.0, 1.0), vec2(0.0, 1.0), vec2(1.0, 1.0),
	vec2(-1.0, 0.0), vec2(0.0, 0.0), vec2(1.0, 1.0),
	vec2(-1.0, -1.0), vec2(0.0, -1.0), vec2(1.0, -1.0)
	};

// X weights
const float sobelXMatrix[9] = float[9] (
	1.0, 0.0, -1.0,
	2.0, 0.0, -2.0,
	1.0, 0.0, -1.0
	);

const float scharrX[9] = float[9] (
	47.0, 0.0, -47.0,
	162.0, 0.0, -162.0,
	47.0, 0.0, -47.0
	);

const float Sobel_FeldmanX[9] = float[9] (
	3.0, 0.0, -3.0,
	10.0, 0.0, -10.0,
	3.0, 0.0, -3.0
	);

const float PrewittX[9] = float[9] (
	1.0, 0.0, -1.0,
	1.0, 0.0, -1.0,
	1.0, 0.0, -1.0
	);

// Y weights
const float sobelYMatrix[9] = float[9] (
	1.0, 2.0, 1.0,
	0.0, 0.0, 0.0,
	-1.0, -2.0, -1.0
	);

const float scharrY[9] = float[9] (
	47.0, 162.0, 47.0,
	0.0, 0.0, 0.0,
	-47.0, -162.0, -47.0
	);

const float Sobel_FeldmanY[9] = float[9] (
	3.0, 10.0, 3.0,
	0.0, 0.0, 0.0,
	-3.0, -10.0, -3.0
	);

const float PrewittY[9] = float[9] (
	1.0, 1.0, 1.0,
	0.0, 0.0, 0.0,
	-1.0, -1.0, -1.0
	);


void vertex() {
	// Posiiton quad to always cover the screen
	POSITION = vec4(VERTEX, 1.0);
}

void fragment(){
	vec2 sobel = vec2(0.0, 0.0);
	
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).x;
	vec3 ndc = vec3(SCREEN_UV, depth) * 2.0 - 1.0;
	vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	view.xyz /= view.w;
	float linear_depth = -view.z;
	

	for (int i = 0; i < 9; i++){
		vec2 kernel = vec2(scharrX[i], scharrY[i]); // use preffered kernel
		
		float t_depth = texture(DEPTH_TEXTURE, SCREEN_UV + sobelSamplePoints[i] * float(thickness) / VIEWPORT_SIZE).x;
		vec3 t_ndc = vec3(SCREEN_UV, t_depth) * 2.0 - 1.0;
		vec4 t_view = INV_PROJECTION_MATRIX * vec4(t_ndc, 1.0);
		t_view.xyz /= t_view.w;
		float t_linear_depth = -t_view.z;
		
		
		float diff = t_linear_depth - linear_depth;
		diff *= step(diff, 0.0);
		float d = t_linear_depth - diff;
		
		sobel += d * kernel;
	}

	float sobel_value = length(sobel);
	sobel_value = smoothstep(cutoff * 5.0, cutoff, sobel_value);
	
	ALBEDO = texture(SCREEN_TEXTURE, SCREEN_UV).rgb * highlight_amount;
	ALPHA = clamp(1.0 - sobel_value, 0.0, 1.0);
}"

[sub_resource type="ShaderMaterial" id=16]
shader = SubResource( 15 )
shader_param/outline_col = Color( 0, 0, 0, 1 )
shader_param/cutoff = 200.0
shader_param/highlight_amount = 2.0
shader_param/thickness = 2.0

[sub_resource type="QuadMesh" id=17]
size = Vector2( 2, 2 )

[sub_resource type="SphereShape" id=25]

[sub_resource type="SpatialMaterial" id=41]
albedo_color = Color( 0.215686, 0.34902, 0.964706, 1 )

[sub_resource type="CapsuleMesh" id=42]
radius = 0.75
mid_height = 2.0

[sub_resource type="CubeMesh" id=32]
size = Vector3( 3, 12, 3 )

[sub_resource type="ConcavePolygonShape" id=38]
data = PoolVector3Array( -1.5, 6, 1.5, 1.5, 6, 1.5, -1.5, -6, 1.5, 1.5, 6, 1.5, 1.5, -6, 1.5, -1.5, -6, 1.5, 1.5, 6, -1.5, -1.5, 6, -1.5, 1.5, -6, -1.5, -1.5, 6, -1.5, -1.5, -6, -1.5, 1.5, -6, -1.5, 1.5, 6, 1.5, 1.5, 6, -1.5, 1.5, -6, 1.5, 1.5, 6, -1.5, 1.5, -6, -1.5, 1.5, -6, 1.5, -1.5, 6, -1.5, -1.5, 6, 1.5, -1.5, -6, -1.5, -1.5, 6, 1.5, -1.5, -6, 1.5, -1.5, -6, -1.5, 1.5, 6, 1.5, -1.5, 6, 1.5, 1.5, 6, -1.5, -1.5, 6, 1.5, -1.5, 6, -1.5, 1.5, 6, -1.5, -1.5, -6, 1.5, 1.5, -6, 1.5, -1.5, -6, -1.5, 1.5, -6, 1.5, 1.5, -6, -1.5, -1.5, -6, -1.5 )

[sub_resource type="ConcavePolygonShape" id=39]
data = PoolVector3Array( -1.5, 6, 1.5, 1.5, 6, 1.5, -1.5, -6, 1.5, 1.5, 6, 1.5, 1.5, -6, 1.5, -1.5, -6, 1.5, 1.5, 6, -1.5, -1.5, 6, -1.5, 1.5, -6, -1.5, -1.5, 6, -1.5, -1.5, -6, -1.5, 1.5, -6, -1.5, 1.5, 6, 1.5, 1.5, 6, -1.5, 1.5, -6, 1.5, 1.5, 6, -1.5, 1.5, -6, -1.5, 1.5, -6, 1.5, -1.5, 6, -1.5, -1.5, 6, 1.5, -1.5, -6, -1.5, -1.5, 6, 1.5, -1.5, -6, 1.5, -1.5, -6, -1.5, 1.5, 6, 1.5, -1.5, 6, 1.5, 1.5, 6, -1.5, -1.5, 6, 1.5, -1.5, 6, -1.5, 1.5, 6, -1.5, -1.5, -6, 1.5, 1.5, -6, 1.5, -1.5, -6, -1.5, 1.5, -6, 1.5, 1.5, -6, -1.5, -1.5, -6, -1.5 )

[sub_resource type="ConcavePolygonShape" id=40]
data = PoolVector3Array( -1.5, 6, 1.5, 1.5, 6, 1.5, -1.5, -6, 1.5, 1.5, 6, 1.5, 1.5, -6, 1.5, -1.5, -6, 1.5, 1.5, 6, -1.5, -1.5, 6, -1.5, 1.5, -6, -1.5, -1.5, 6, -1.5, -1.5, -6, -1.5, 1.5, -6, -1.5, 1.5, 6, 1.5, 1.5, 6, -1.5, 1.5, -6, 1.5, 1.5, 6, -1.5, 1.5, -6, -1.5, 1.5, -6, 1.5, -1.5, 6, -1.5, -1.5, 6, 1.5, -1.5, -6, -1.5, -1.5, 6, 1.5, -1.5, -6, 1.5, -1.5, -6, -1.5, 1.5, 6, 1.5, -1.5, 6, 1.5, 1.5, 6, -1.5, -1.5, 6, 1.5, -1.5, 6, -1.5, 1.5, 6, -1.5, -1.5, -6, 1.5, 1.5, -6, 1.5, -1.5, -6, -1.5, 1.5, -6, 1.5, 1.5, -6, -1.5, -1.5, -6, -1.5 )

[sub_resource type="SpatialMaterial" id=33]
albedo_color = Color( 0.137255, 0.129412, 0.12549, 1 )
albedo_texture = ExtResource( 6 )
metallic = 0.27
metallic_specular = 0.23
roughness = 0.63
normal_enabled = true
normal_scale = 4.0
normal_texture = ExtResource( 7 )
ao_enabled = true
ao_light_affect = 0.5
ao_texture = ExtResource( 6 )
ao_on_uv2 = false
ao_texture_channel = 0
uv1_scale = Vector3( 6, 6, 1 )

[sub_resource type="QuadMesh" id=34]
size = Vector2( 25, 25 )

[sub_resource type="SpatialMaterial" id=48]
params_specular_mode = 1
albedo_color = Color( 0.192157, 0.180392, 0.0627451, 1 )
metallic_specular = 0.3

[sub_resource type="StyleBoxFlat" id=27]
bg_color = Color( 0, 0, 0, 1 )

[sub_resource type="SpatialMaterial" id=35]
params_cull_mode = 2
params_use_alpha_scissor = true
params_alpha_scissor_threshold = 0.8
albedo_color = Color( 0.168627, 0.129412, 0.0235294, 1 )
albedo_texture = ExtResource( 9 )
metallic_specular = 0.2
ao_enabled = true
ao_light_affect = 0.0
ao_on_uv2 = false
ao_texture_channel = 0

[sub_resource type="SpatialMaterial" id=37]
albedo_color = Color( 0.180392, 0.129412, 0.0862745, 1 )
metallic_specular = 0.2
normal_enabled = true
normal_scale = 1.0
normal_texture = ExtResource( 12 )

[sub_resource type="Shader" id=43]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.1.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_blinn;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}


void light(){
	float attn = clamp(clamp(dot(NORMAL, LIGHT), 0.0, 1.0) * ATTENUATION.x, 0.1, 1.0);
	DIFFUSE_LIGHT += attn * ALBEDO * LIGHT_COLOR;
}"

[sub_resource type="ShaderMaterial" id=44]
shader = SubResource( 43 )
shader_param/albedo = Color( 0.117647, 0.113725, 0.0196078, 1 )
shader_param/specular = 0.3
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 16 )

[sub_resource type="Shader" id=45]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.1.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_blinn;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float alpha_scissor_threshold;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_ambient_occlusion : hint_white;
uniform vec4 ao_texture_channel;
uniform float ao_light_affect;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	ALPHA = albedo.a * albedo_tex.a;
	AO = dot(texture(texture_ambient_occlusion,base_uv),ao_texture_channel);
	AO_LIGHT_AFFECT = ao_light_affect;
	ALPHA_SCISSOR=alpha_scissor_threshold;
}

void light(){
	float attn = clamp(clamp(dot(NORMAL, LIGHT), 0.0, 1.0) * ATTENUATION.x, 0.1, 1.0);
	DIFFUSE_LIGHT += attn * ALBEDO * LIGHT_COLOR;
}"

[sub_resource type="ShaderMaterial" id=46]
shader = SubResource( 45 )
shader_param/albedo = Color( 0.117647, 0.113725, 0.0196078, 1 )
shader_param/specular = 0.3
shader_param/metallic = 0.0
shader_param/alpha_scissor_threshold = 0.7
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/ao_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/ao_light_affect = 0.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 9 )

[node name="Game" type="Node"]

[node name="env_ViewportContainer" type="ViewportContainer" parent="."]
modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( -631, 2486 )
mouse_filter = 2
stretch = true
stretch_shrink = 8

[node name="Viewport" type="Viewport" parent="env_ViewportContainer"]
size = Vector2( 240, 135 )
own_world = true
world = SubResource( 49 )
handle_input_locally = false
keep_3d_linear = true
render_target_update_mode = 3

[node name="env_Camera" type="Camera" parent="env_ViewportContainer/Viewport" groups=["copy_cams"]]
cull_mask = 2
size = 5.0
far = 40.0

[node name="Terrain_Test2" type="MeshInstance" parent="env_ViewportContainer/Viewport"]
layers = 2
material_override = SubResource( 51 )
mesh = ExtResource( 24 )

[node name="Level" type="Spatial" parent="."]
script = ExtResource( 19 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="Level"]
environment = ExtResource( 26 )

[node name="DirectionalLight" type="DirectionalLight" parent="Level/WorldEnvironment"]
transform = Transform( -0.106976, 0.761649, -0.639099, 0, 0.642787, 0.766045, 0.994262, 0.0819482, -0.0687627, 0, 0, 0 )
layers = 0
light_color = Color( 0.913725, 0.721569, 0.792157, 1 )
light_energy = 8.0
light_cull_mask = 4293918721
shadow_enabled = true
shadow_color = Color( 0.478431, 0.584314, 0.807843, 1 )
directional_shadow_mode = 0

[node name="Test_Level" parent="Level" instance=ExtResource( 2 )]

[node name="Entity" type="MeshInstance" parent="Level"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 3.59771, 2.44167, -0.130647 )
material_override = SubResource( 19 )
generate_lightmap = false
mesh = SubResource( 14 )

[node name="MeshInstance" type="MeshInstance" parent="Level/Entity"]
transform = Transform( -4.37114e-08, 4.37114e-08, 1, -4.37114e-08, 1, -4.37114e-08, -1, -4.37114e-08, -4.37114e-08, 0, 0.591019, -0.852383 )
mesh = SubResource( 26 )

[node name="NavigationMeshInstance" type="NavigationMeshInstance" parent="Level"]
visible = false
navmesh = SubResource( 52 )

[node name="Cam_Move" type="KinematicBody" parent="Level"]
script = ExtResource( 13 )

[node name="Cam_Pivot" type="Spatial" parent="Level/Cam_Move"]
transform = Transform( 0.707107, 0, -0.707107, -3.90799e-14, 1, -3.90799e-14, 0.707107, 0, 0.707107, 0, 0, 0 )

[node name="Cam_Pitch" type="Spatial" parent="Level/Cam_Move/Cam_Pivot"]
transform = Transform( 1, 0, 0, 0, 0.422618, 0.906308, 0, -0.906308, 0.422618, 0, 0, 0 )

[node name="Cam_Stick" type="Spatial" parent="Level/Cam_Move/Cam_Pivot/Cam_Pitch"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 25 )

[node name="LevelCamera" type="Camera" parent="Level/Cam_Move/Cam_Pivot/Cam_Pitch/Cam_Stick"]
cull_mask = 1
size = 5.0
far = 40.0
script = ExtResource( 10 )

[node name="PostProcessingQuad" type="MeshInstance" parent="Level/Cam_Move/Cam_Pivot/Cam_Pitch/Cam_Stick/LevelCamera"]
material_override = SubResource( 16 )
mesh = SubResource( 17 )

[node name="CollisionShape" type="CollisionShape" parent="Level/Cam_Move"]
shape = SubResource( 25 )

[node name="Pitch_Tween" type="Tween" parent="Level/Cam_Move"]

[node name="Pivot_Tween" type="Tween" parent="Level/Cam_Move"]

[node name="Zoom_Tween" type="Tween" parent="Level/Cam_Move"]

[node name="MeshInstance" type="MeshInstance" parent="Level/Cam_Move"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 2.29502, 0 )
material_override = SubResource( 41 )
mesh = SubResource( 42 )

[node name="bush" type="MeshInstance" parent="Level"]
transform = Transform( 1.01394, -0.476714, 0, 0.549859, 0.879059, 0, 0, 0, 1, -7.13634, 6.8173, -11.4123 )
visible = false
material_override = ExtResource( 4 )
mesh = ExtResource( 3 )

[node name="bush6" type="MeshInstance" parent="Level"]
transform = Transform( -1.14843, -0.0930658, 0, 0.107345, -0.99566, 0, 0, 0, 1, -11.7537, 6.80303, -8.76547 )
visible = false
material_override = ExtResource( 4 )
mesh = ExtResource( 3 )

[node name="bush2" type="MeshInstance" parent="Level"]
transform = Transform( -0.217248, -1.98817, -7.40649e-09, 1.21914, -0.133216, -1.57986, 1.57051, -0.171611, 1.22639, -8.68477, 3.55688, -6.97907 )
visible = false
material_override = ExtResource( 4 )
mesh = ExtResource( 3 )

[node name="bush7" type="MeshInstance" parent="Level"]
transform = Transform( -0.125243, -1.49112, -5.55487e-09, 0.702832, -0.0999117, -1.1849, 0.9054, -0.128708, 0.919795, -13.9713, 3.10851, -4.62385 )
visible = false
material_override = ExtResource( 4 )
mesh = ExtResource( 3 )

[node name="bush3" type="MeshInstance" parent="Level"]
transform = Transform( -0.125291, -0.994083, 0, 0.703099, -0.0666078, -0.78993, 0.905744, -0.0858053, 0.613197, -11.9009, 4.78342, -6.12315 )
visible = false
material_override = ExtResource( 4 )
mesh = ExtResource( 3 )

[node name="bush4" type="MeshInstance" parent="Level"]
transform = Transform( -0.125291, -0.994083, 0, 0.703099, -0.0666078, -0.78993, 0.905744, -0.0858053, 0.613197, -6.0507, 5.69706, -6.95404 )
visible = false
material_override = ExtResource( 4 )
mesh = ExtResource( 3 )

[node name="bush5" type="MeshInstance" parent="Level"]
transform = Transform( 0.04412, 0.997774, -0.0546163, 0.703099, -0.0666078, -0.78993, -0.913303, -0.00307679, -0.610759, -4.82467, 3.06247, -8.15077 )
visible = false
material_override = ExtResource( 4 )
mesh = ExtResource( 3 )

[node name="bush10" type="MeshInstance" parent="Level"]
transform = Transform( 0.02291, 1.24307, -0.0871378, 1.21914, -0.133216, -1.57986, -1.58504, -0.0561957, -1.2184, -4.55052, 2.01301, -12.08 )
visible = false
material_override = ExtResource( 4 )
mesh = ExtResource( 3 )

[node name="bush11" type="MeshInstance" parent="Level"]
transform = Transform( 0.656117, 1.16143, 0.408376, 1.21914, -0.133216, -1.57986, -1.44305, 0.446611, -1.15122, -5.65441, 4.80397, -10.0616 )
visible = false
material_override = ExtResource( 4 )
mesh = ExtResource( 3 )

[node name="bush9" type="MeshInstance" parent="Level"]
transform = Transform( 0.0573763, 1.49666, -0.0819244, 0.722825, -0.0994493, -1.31059, -1.3131, 0.010653, -0.725021, 14.2746, 0.887188, -1.03118 )
visible = false
material_override = ExtResource( 4 )
mesh = ExtResource( 3 )

[node name="MeshInstance" type="MeshInstance" parent="Level"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -11.0044, 0.891896, 12.4107 )
material_override = ExtResource( 20 )
mesh = SubResource( 32 )

[node name="StaticBody" type="StaticBody" parent="Level/MeshInstance"]

[node name="CollisionShape" type="CollisionShape" parent="Level/MeshInstance/StaticBody"]
shape = SubResource( 38 )

[node name="MeshInstance2" type="MeshInstance" parent="Level"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -5.26798, 3.75481, 22.2124 )
material_override = ExtResource( 20 )
mesh = SubResource( 32 )

[node name="StaticBody" type="StaticBody" parent="Level/MeshInstance2"]

[node name="CollisionShape" type="CollisionShape" parent="Level/MeshInstance2/StaticBody"]
shape = SubResource( 39 )

[node name="MeshInstance3" type="MeshInstance" parent="Level"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 6.84457, 5.48171, 26.8028 )
material_override = ExtResource( 20 )
mesh = SubResource( 32 )

[node name="StaticBody" type="StaticBody" parent="Level/MeshInstance3"]

[node name="CollisionShape" type="CollisionShape" parent="Level/MeshInstance3/StaticBody"]
shape = SubResource( 40 )

[node name="tile_Test" type="MeshInstance" parent="Level"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, -0.134051, 10.953 )
visible = false
material_override = SubResource( 33 )
mesh = SubResource( 34 )

[node name="bush8" type="MeshInstance" parent="Level"]
transform = Transform( 0.768545, 0.38152, 0.513596, -0.0624731, 0.843665, -0.533223, -0.636738, 0.37772, 0.672229, -14.54, 4.91582, -6.9343 )
mesh = ExtResource( 21 )
skeleton = NodePath("../WorldEnvironment")
material/0 = SubResource( 48 )
material/1 = ExtResource( 4 )

[node name="bush13" type="MeshInstance" parent="Level"]
transform = Transform( 0.618573, 0.452008, 0.642694, -0.0624731, 0.843665, -0.533223, -0.78324, 0.289686, 0.550107, -4.02926, 1.7516, -13.1441 )
mesh = ExtResource( 21 )
skeleton = NodePath("../WorldEnvironment")
material/0 = SubResource( 48 )
material/1 = ExtResource( 4 )

[node name="bush14" type="MeshInstance" parent="Level"]
transform = Transform( 0.458675, -0.0214981, -0.888344, -0.0181833, 0.999271, -0.033571, 0.888418, 0.0315513, 0.457949, 13.9659, 0.66105, -0.94225 )
mesh = ExtResource( 21 )
skeleton = NodePath("../WorldEnvironment")
material/0 = SubResource( 48 )
material/1 = ExtResource( 4 )

[node name="bush15" type="MeshInstance" parent="Level"]
transform = Transform( -1.03189, 0.00407174, 0.68011, -0.0230023, 1.2641, -0.0424682, -0.716627, -0.0476507, -1.03021, 13.9786, 1.59332, -7.26983 )
mesh = ExtResource( 21 )
skeleton = NodePath("../WorldEnvironment")
material/0 = SubResource( 48 )
material/1 = ExtResource( 4 )

[node name="bush12" type="MeshInstance" parent="Level"]
transform = Transform( -0.264583, 0.149123, 0.952763, -0.646709, 0.705453, -0.290006, -0.715377, -0.692891, -0.0902111, -23.8713, 0.204409, -7.83018 )
mesh = ExtResource( 21 )
skeleton = NodePath("../WorldEnvironment")
material/0 = SubResource( 48 )
material/1 = ExtResource( 4 )

[node name="MonitorOverlay" type="VBoxContainer" parent="."]
margin_right = 159.0
margin_bottom = 242.0
script = ExtResource( 1 )
process = true
nodes = true
orphan_nodes = true
vertices_drawn = true
draw_calls_3d = true

[node name="Hotbar" type="HBoxContainer" parent="."]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -48.0

[node name="Label" type="Label" parent="Hotbar"]
margin_right = 308.0
margin_bottom = 48.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_styles/normal = SubResource( 27 )
text = "Dev v0.1"

[node name="HSlotBar" type="HBoxContainer" parent="Hotbar"]
margin_left = 312.0
margin_right = 1920.0
margin_bottom = 48.0

[node name="HSlot1" type="Button" parent="Hotbar/HSlotBar"]
margin_right = 48.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot2" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 52.0
margin_right = 100.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot3" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 104.0
margin_right = 152.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot4" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 156.0
margin_right = 204.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot5" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 208.0
margin_right = 256.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot6" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 260.0
margin_right = 308.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot7" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 312.0
margin_right = 360.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot8" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 364.0
margin_right = 412.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot9" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 416.0
margin_right = 464.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot10" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 468.0
margin_right = 516.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot11" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 520.0
margin_right = 568.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot12" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 572.0
margin_right = 620.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot13" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 624.0
margin_right = 672.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot14" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 676.0
margin_right = 724.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot15" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 728.0
margin_right = 776.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot16" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 780.0
margin_right = 828.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot17" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 832.0
margin_right = 880.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot18" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 884.0
margin_right = 932.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot19" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 936.0
margin_right = 984.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot20" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 988.0
margin_right = 1036.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot21" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 1040.0
margin_right = 1088.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot22" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 1092.0
margin_right = 1140.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot23" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 1144.0
margin_right = 1192.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot24" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 1196.0
margin_right = 1244.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot25" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 1248.0
margin_right = 1296.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot26" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 1300.0
margin_right = 1348.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot27" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 1352.0
margin_right = 1400.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot28" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 1404.0
margin_right = 1452.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot29" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 1456.0
margin_right = 1504.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot30" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 1508.0
margin_right = 1556.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="HSlot31" type="Button" parent="Hotbar/HSlotBar"]
margin_left = 1560.0
margin_right = 1608.0
margin_bottom = 48.0
rect_min_size = Vector2( 48, 48 )

[node name="plant" type="MeshInstance" parent="."]
transform = Transform( 0.98492, 0.172779, 0.0089854, -0.173012, 0.983591, 0.0511519, 0, -0.0519351, 0.99865, -11.9351, 1.86314, -4.16761 )
material_override = SubResource( 35 )
mesh = ExtResource( 8 )

[node name="plant3" type="MeshInstance" parent="."]
transform = Transform( 0.928319, -0.100735, 0.357876, 0.249542, 0.882373, -0.398932, -0.275594, 0.459642, 0.844261, -6.54638, 2.50089, -6.50072 )
material_override = SubResource( 35 )
mesh = ExtResource( 8 )

[node name="plant4" type="MeshInstance" parent="."]
transform = Transform( 0.928319, -0.100735, 0.357876, 0.327368, 0.677733, -0.658413, -0.176219, 0.728376, 0.66213, -9.56674, 5.32707, -6.39567 )
material_override = SubResource( 35 )
mesh = ExtResource( 8 )

[node name="plant2" type="MeshInstance" parent="."]
transform = Transform( 0.885532, 0.259103, 0.385616, -0.0934961, 0.912441, -0.398384, -0.455074, 0.316728, 0.832221, -13.605, 4.00571, -6.49847 )
material_override = SubResource( 35 )
mesh = ExtResource( 8 )

[node name="tree_1" type="MeshInstance" parent="."]
transform = Transform( 0.452609, 0, -0.77791, 0, 0.9, 0, 0.77791, 0, 0.452609, 12.6291, 1.80657, -10.8496 )
material_override = SubResource( 37 )
mesh = ExtResource( 5 )

[node name="leaves_blob" type="MeshInstance" parent="tree_1"]
material_override = SubResource( 44 )
mesh = ExtResource( 14 )

[node name="leaves_blob_textured" type="MeshInstance" parent="tree_1"]
transform = Transform( 1, -0.000526167, 0.000322044, 0.000526275, 1, -0.000362433, -0.000321954, 0.000362592, 1, 0, 0, 0 )
material_override = ExtResource( 17 )
cast_shadow = 0
mesh = ExtResource( 18 )

[node name="leaves_cards" type="MeshInstance" parent="tree_1"]
transform = Transform( 1, 0, -1.49012e-08, 0, 1, 0, 1.49012e-08, 0, 1, 0, 0, 0 )
material_override = SubResource( 46 )
cast_shadow = 0
mesh = ExtResource( 15 )

[node name="fern1" type="MeshInstance" parent="."]
transform = Transform( -0.984356, 0, -0.176191, 0, 1, 0, 0.176191, 0, -0.984356, -7.97509, 2.00118, -4.42753 )
material_override = ExtResource( 23 )
mesh = ExtResource( 22 )

[node name="fern4" type="MeshInstance" parent="."]
transform = Transform( -0.876346, 0.363487, 0.316062, 0.404278, 0.911769, 0.0723624, -0.261873, 0.191191, -0.945975, -4.79848, 2.73281, -8.5631 )
material_override = ExtResource( 23 )
mesh = ExtResource( 22 )

[node name="fern3" type="MeshInstance" parent="."]
transform = Transform( -0.668171, -0.0988856, -0.737407, -0.233503, 0.968922, 0.0816476, 0.706416, 0.226741, -0.670496, -21.9723, 2.03544, -2.5115 )
material_override = ExtResource( 23 )
mesh = ExtResource( 22 )

[node name="fern2" type="MeshInstance" parent="."]
transform = Transform( 0.448995, 0.0531664, -0.569575, -0.123025, 0.702095, -0.0153867, 0.650752, 0.0960491, 0.427752, -12.73, 3.57712, -4.37442 )
material_override = ExtResource( 23 )
mesh = ExtResource( 22 )
